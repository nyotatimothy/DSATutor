{
  "timestamp": "2025-07-03T12:38:40.472Z",
  "auth": {
    "status": "completed",
    "output": "[dotenv@17.0.1] injecting env (13) from .env – [tip] encrypt with dotenvx: https://dotenvx.com\n🚀 Starting New Auth System Tests...\n📧 Test Email: test-1751546320543@example.com\n🔑 Test Password: TestPassword123!\n👤 Test Name: Test User\n\n🧪 Testing User Signup...\n✅ User Signup\n\n🧪 Testing Duplicate Signup...\n✅ Duplicate Signup\n\n🧪 Testing User Login...\n✅ User Login\n\n🧪 Testing Invalid Login...\n✅ Invalid Login\n\n🧪 Testing Get Profile...\n✅ Get Profile\n\n🧪 Testing Get Profile (Unauthorized)...\n✅ Get Profile Unauthorized\n\n🧪 Testing Update Profile...\n✅ Update Profile\n\n🧪 Testing Password Reset...\n✅ Password Reset\n\n🧪 Testing Password Reset (Invalid Email)...\n✅ Password Reset Invalid Email\n\n🧪 Testing Logout...\n✅ Logout\n\n🧪 Testing Invalid HTTP Methods...\n✅ Invalid Method - GET Signup\n✅ Invalid Method - PUT Login\n\n📊 Test Summary:\nTotal Tests: 12\n✅ Passed: 12\n❌ Failed: 0\n📈 Success Rate: 100.0%\n\n🎉 Auth System Tests Completed!\n"
  },
  "courses": {
    "status": "completed",
    "output": "[dotenv@17.0.1] injecting env (13) from .env – [tip] encrypt with dotenvx: https://dotenvx.com\n🚀 Starting Course & Topic API Tests...\n📧 Test User Email: test-1751546325559@example.com\n👤 Test Admin Email: admin-1751546325559@example.com\n📚 Test Course: Test Course\n📖 Test Topic: Test Topic\n\n🔐 Testing Authentication...\n1. Creating test user...\n✅ Test user created\n2. Logging in test user...\n✅ Test user logged in\n3. Creating admin user...\n✅ Admin user created\n4. Logging in admin user...\n✅ Admin user logged in\n\n📚 Testing Course APIs...\n1. Getting courses (empty)...\n✅ Get courses successful\n   Found 10 courses\n2. Creating course (unauthorized)...\n✅ Create course unauthorized (expected)\n3. Creating course (admin)...\n✅ Course created successfully\n   Course ID: 0f9fbeb2-2ab7-4c22-97e9-f5fafb1d6271\n4. Getting courses (with data)...\n✅ Get courses successful\n   Found 10 courses\n5. Getting single course...\n✅ Get single course successful\n   Course: Test Course\n6. Updating course (unauthorized)...\n✅ Update course unauthorized (expected)\n7. Updating course (admin)...\n✅ Course updated successfully\n   New title: Updated Course Title\n8. Getting courses...\n✅ Get courses successful\n   Found 10 courses\n\n📖 Testing Topic APIs...\n1. Getting topics (empty)...\n✅ Get topics successful\n   Found 0 topics\n2. Creating topic (unauthorized)...\n✅ Create topic unauthorized (expected)\n3. Creating topic (admin)...\n✅ Topic created successfully\n   Topic ID: 8df9e421-be4c-4958-b7cc-6b3050d9fdeb\n4. Getting topics (with data)...\n✅ Get topics successful\n   Found 1 topics\n5. Getting single topic...\n✅ Get single topic successful\n   Topic: Test Topic\n6. Updating topic (unauthorized)...\n✅ Update topic unauthorized (expected)\n7. Updating topic (admin)...\n✅ Topic updated successfully\n   New title: Updated Topic Title\n8. Creating second topic...\n✅ Second topic created successfully\n9. Reordering topics...\n✅ Topics reordered successfully\n10. Getting topics...\n✅ Get topics successful\n   Found 2 topics\n\n🔍 Testing Validation...\n1. Creating course with missing title...\n✅ Missing title validation (expected)\n2. Creating course with missing description...\n✅ Missing description validation (expected)\n3. Creating topic with invalid position...\n✅ Invalid position validation (expected)\n4. Getting non-existent course...\n✅ Non-existent course validation (expected)\n5. Getting non-existent topic...\n✅ Non-existent topic validation (expected)\n\n⚠️  Testing Error Handling...\n1. Testing invalid HTTP methods...\n✅ Invalid method course (expected)\n✅ Invalid method topic (expected)\n2. Testing missing required fields...\n✅ Missing fields course (expected)\n✅ Missing fields topic (expected)\n\n🎉 Course & Topic API Tests Completed!\n\n📊 Test Summary:\nTotal Tests: 31\n✅ Passed: 31\n❌ Failed: 0\n📈 Success Rate: 100.0%\n\n🔗 Available Endpoints:\n   GET    /api/courses - List courses\n   POST   /api/courses - Create course (admin only)\n   GET    /api/courses/[id] - Get single course\n   PUT    /api/courses/[id] - Update course (admin only)\n   DELETE /api/courses/[id] - Delete course (admin only)\n   GET    /api/topics - List topics for course\n   POST   /api/topics - Create topic (admin only)\n   GET    /api/topics/[id] - Get single topic\n   PUT    /api/topics/[id] - Update topic (admin only)\n   DELETE /api/topics/[id] - Delete topic (admin only)\n   POST   /api/topics/reorder - Reorder topics (admin only)\n📊 Test results saved to: /Users/timothynyota/Repos/DSA AI Tutor/test-results.json\n"
  },
  "progress": {
    "status": "completed",
    "output": "[dotenv@17.0.1] injecting env (13) from .env – [tip] encrypt with dotenvx: https://dotenvx.com\n🚀 Starting Progress API Tests...\n📧 Test User Email: test-1751546330118@example.com\n📊 Test Progress Status: in_progress\n\n🔧 Setting up test data...\n1. Creating test user...\n✅ Test user created\n2. Logging in test user...\n✅ Test user logged in\n3. Getting existing course...\n✅ Using existing course\n   Course ID: 0f9fbeb2-2ab7-4c22-97e9-f5fafb1d6271\n4. Getting existing topic...\n✅ Using existing topic\n   Topic ID: e9a0bbe3-bd2c-4435-ad40-80f0486b082f\n\n📊 Testing Progress CRUD Operations...\n1. Getting progress (empty)...\n✅ Get progress successful\n   Found 0 progress entries\n2. Creating progress...\n✅ Progress created successfully\n   Progress ID: b30442b9-997a-41e5-a3a4-4187177320b7\n3. Getting progress (with data)...\n✅ Get progress successful\n   Found 1 progress entries\n4. Getting specific progress...\n✅ Get specific progress successful\n   Status: in_progress\n5. Updating progress...\n✅ Progress updated successfully\n   New status: complete\n6. Creating progress for same topic (should update)...\n✅ Progress updated via create (upsert)\n   Status: in_progress\n\n📈 Testing Progress Statistics...\n1. Getting progress stats...\n✅ Get progress stats successful\n   Total Topics: 1\n   Completed: 0\n   In Progress: 1\n   Not Started: 0\n   Completion Rate: 0.0%\n2. Getting progress stats for specific course...\n✅ Get course progress stats successful\n   Total Topics: 1\n   Completion Rate: 0.0%\n\n🔍 Testing Validation...\n1. Creating progress with missing topicId...\n✅ Missing topicId validation (expected)\n2. Creating progress with invalid status...\n✅ Invalid status validation (expected)\n3. Creating progress with non-existent topic...\n✅ Non-existent topic validation (expected)\n4. Getting non-existent progress...\n✅ Non-existent progress validation (expected)\n\n⚠️  Testing Error Handling...\n1. Testing invalid HTTP methods...\n❌ Invalid method progress failed: {\n  success: false,\n  error: {\n    success: false,\n    error: 'Access token required',\n    message: 'Please provide a valid authentication token'\n  },\n  status: 401\n}\n❌ Invalid method stats failed: {\n  success: false,\n  error: {\n    success: false,\n    error: 'Access token required',\n    message: 'Please provide a valid authentication token'\n  },\n  status: 401\n}\n2. Testing unauthorized access...\n✅ Unauthorized progress access (expected)\n✅ Unauthorized stats access (expected)\n\n🎉 Progress API Tests Completed!\n\n📊 Test Summary:\nTotal Tests: 20\n✅ Passed: 18\n❌ Failed: 2\n📈 Success Rate: 90.0%\n\n🔗 Available Endpoints:\n   GET    /api/progress - Get user progress\n   POST   /api/progress - Create/update progress\n   GET    /api/progress/[id] - Get specific progress\n   PUT    /api/progress/[id] - Update progress\n   DELETE /api/progress/[id] - Delete progress\n   GET    /api/progress/stats - Get progress statistics\n📊 Test results saved to: /Users/timothynyota/Repos/DSA AI Tutor/test-results.json\n"
  },
  "attempts": {
    "status": "completed",
    "output": "[dotenv@17.0.1] injecting env (13) from .env – [tip] encrypt with dotenvx: https://dotenvx.com\n🚀 Starting Attempt API Tests...\n📧 Test User Email: test-1751546332609@example.com\n💻 Test Code: function fibonacci(n) { return n <= 1 ? n : fibona...\n✅ Test Result: pass\n⏱️ Test Time: 120 seconds\n\n🔧 Setting up test data...\n1. Creating test user...\n✅ Test user created\n2. Logging in test user...\n✅ Test user logged in\n3. Getting existing topic...\n✅ Using existing topic\n   Topic ID: e9a0bbe3-bd2c-4435-ad40-80f0486b082f\n\n💻 Testing Attempt CRUD Operations...\n1. Getting attempts (empty)...\n✅ Get attempts successful\n   Found 0 attempts\n2. Creating attempt...\n✅ Attempt created successfully\n   Attempt ID: 56993e61-2941-4312-a04f-13544d8eac39\n3. Getting attempts (with data)...\n✅ Get attempts successful\n   Found 1 attempts\n4. Getting specific attempt...\n✅ Get specific attempt successful\n   Result: pass\n   Time: 120s\n5. Updating attempt...\n✅ Attempt updated successfully\n   New result: fail\n   New time: 180s\n6. Creating second attempt...\n✅ Second attempt created successfully\n   Attempt ID: dc2ec939-057f-42f4-b035-59e0213823d1\n\n📊 Testing Attempt Statistics...\n1. Getting attempt stats...\n✅ Get attempt stats successful\n   Total Attempts: 2\n   Passed: 1\n   Failed: 1\n   Success Rate: 50%\n   Average Time: 135s\n2. Getting attempt stats for specific topic...\n✅ Get topic attempt stats successful\n   Total Attempts: 2\n   Success Rate: 50%\n3. Filtering attempts by result...\n✅ Get passed attempts successful\n   Found 1 passed attempts\n\n🔍 Testing Validation...\n1. Creating attempt with missing topicId...\n✅ Missing topicId validation (expected)\n2. Creating attempt with missing code...\n✅ Missing code validation (expected)\n3. Creating attempt with invalid result...\n✅ Invalid result validation (expected)\n4. Creating attempt with negative time...\n✅ Negative time validation (expected)\n5. Creating attempt with non-existent topic...\n✅ Non-existent topic validation (expected)\n6. Getting non-existent attempt...\n✅ Non-existent attempt validation (expected)\n\n⚠️  Testing Error Handling...\n1. Testing unauthorized access...\n✅ Unauthorized attempts access (expected)\n✅ Unauthorized stats access (expected)\n\n🎉 Attempt API Tests Completed!\n\n📊 Test Summary:\nTotal Tests: 20\n✅ Passed: 20\n❌ Failed: 0\n📈 Success Rate: 100.0%\n\n🔗 Available Endpoints:\n   GET    /api/attempts - Get user attempts\n   POST   /api/attempts - Create attempt\n   GET    /api/attempts/[id] - Get specific attempt\n   PUT    /api/attempts/[id] - Update attempt\n   DELETE /api/attempts/[id] - Delete attempt\n   GET    /api/attempts/stats - Get attempt statistics\n📊 Test results saved to: /Users/timothynyota/Repos/DSA AI Tutor/test-results.json\n"
  },
  "payments": {
    "status": "failed",
    "error": "Command failed: node scripts/test-payments.js\n/Users/timothynyota/Repos/DSA AI Tutor/scripts/test-payments.js:456\n    const initiateResponse = await axios.post(`${BASE_URL}/payments/initiate`, {\n                             ^^^^^\n\nSyntaxError: await is only valid in async functions and the top level bodies of modules\n    at wrapSafe (node:internal/modules/cjs/loader:1662:18)\n    at Module._compile (node:internal/modules/cjs/loader:1704:20)\n    at Object..js (node:internal/modules/cjs/loader:1895:10)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:170:5)\n    at node:internal/main/run_main_module:36:49\n\nNode.js v22.15.0\n"
  },
  "summary": {}
}